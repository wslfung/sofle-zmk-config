/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {

    behaviors {
      bmt: balanced_mod_tap {
        compatible = "zmk,behavior-hold-tap";
        label = "BALANCED_MOD_TAP";
        #binding-cells = <2>;
        flavor = "balanced";
        tapping-term-ms = <200>;
        quick-tap-ms = <200>;
        require-prior-idle-ms = <125>;
        bindings = <&kp>, <&kp>;
      };
    };

   // Activate ADJUST layer by pressing raise and lower
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_layer {
            if-layers = <LOWER RAISE>;
            then-layer = <ADJUST>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "default";
// ------------------------------------------------------------------------------------------------------------
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// | BKSPC |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  | LC(T) |  N   |  M    |  ,    |  .   |   /   | SHIFT |
//               | GUI | ALT  | CTRL | LOWER|  RAISE |  | DEL   | SPACE| RET   | ALT   | GUI  |
            bindings = <
&kp ESC   &kp N1        &kp N2       &kp N3       &kp N4           &kp N5                               &kp N6    &kp N7            &kp N8       &kp N9       &kp N0          &kp MINUS
&kp TAB   &kp Q         &kp W        &kp E        &kp R            &kp T                                &kp Y     &kp U             &kp I        &kp O        &kp P           &kp BSLH
&kp BSPC  &bmt LCTRL A  &bmt LALT S  &bmt LGUI D  &bmt LC(LSHFT) F &kp G                                &kp H     &bmt RC(RSHFT) J  &bmt RGUI K  &bmt RALT L  &bmt RCTRL SEMI &kp SQT
&kp LSHFT &kp Z         &kp X        &kp C        &kp V            &kp B      &kp C_MUTE   &kp LC(T)    &kp N     &kp M             &kp COMMA    &kp DOT      &kp FSLH        &kp RSHFT
                        &kp RET      &kp SPACE    &none            &mo LOWER  &mo RAISE    &kp DEL      &kp SPACE &kp RET           &mo RAISE    &mo LOWER
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp LC(PG_DN) LC(PG_UP)>;
        };

        lower_layer {
            label = "nav";
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |  F1 |  F2 |  F3  |  F4  |  F5   |  F6  |                   |  F7   |  F8   |  F9  |  F10  |  F11  |  F12  |
// |     |  `  |      |      | PSCRN |      |                   |  INS  |  HOME |  ^   |  END  |  PGUP |       |
// |     |     |      |      |       |      |                   |  DEL  |   <-  |  v   | ->    |  PGDN |  RGUI |
// |     |     |      |      |       |      |  play  |  |       |       |   =   |  [   |  ]    |       |       |
//             |      |      |       |      |        |  |       |       |       |      |       |
            bindings = <
&kp F1    &kp F2    &kp F3    &kp F4      &kp F5    &kp F6                              &kp F7    &kp F8    &kp F9          &kp F10   &kp F11   &kp F12
&trans    &kp GRAVE &trans    &trans      &kp PSCRN &trans                              &kp INS   &kp HOME  &kp UP          &kp END   &kp PG_UP &trans
&trans    &trans    &trans    &trans      &trans    &trans                              &kp DEL   &kp LEFT  &kp DOWN        &kp RIGHT &kp PG_DN &kp RGUI
&trans    &trans    &trans    &trans      &trans    &trans   &kp C_PLAY_PAUSE &none     &trans    &kp EQUAL &kp LBKT        &kp RBKT  &trans    &trans
                    &trans    &trans      &trans    &trans   &trans           &trans    &trans    &trans    &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_NEXT C_PREV &inc_dec_kp LC(Z) LC(Y)>;
        };

        raise_layer {
            label = "num";
// ------------------------------------------------------------------------------------------------------------
// |       |      |      |       |       |      |                |      |      |  8/*  |      |       |   -   |
// |       |      |      |       |       |      |                |      |  7   |   8   |  9   |       |       |
// |       |      |      |       |       |      |                |      |  4   |   5   |  6   |   +   |   =   |
// |       |      |      |       |       |      |      |  |      |      |  1   |   2   |  3   |   /   |       |
// |       |      |      |       |       |      |      |  |      |  0   |  .   |       |      |
            bindings = <
&trans  &trans   &trans  &trans  &trans  &trans                    &trans    &trans       &kp N8      &trans      &trans        &kp MINUS
&trans  &trans   &trans  &trans  &trans  &trans                    &trans    &kp KP_N7    &kp KP_N8   &kp KP_N9   &trans        &trans
&trans  &trans   &trans  &trans  &trans  &trans                    &trans    &kp KP_N4    &kp KP_N5   &kp KP_N6   &kp KP_PLUS   &kp KP_EQUAL
&trans  &trans   &trans  &trans  &trans  &trans   &none   &none    &trans    &kp KP_N1    &kp KP_N2   &kp KP_N3   &kp FSLH      &trans
                 &trans  &trans  &trans  &trans   &trans  &trans   &kp KP_N0 &kp KP_DOT   &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_RW C_FF &inc_dec_kp LC(PLUS) LC(MINUS)>;
        };

        adjust_layer {
// ----------------------------------------------------------------------------------------------------------------------------
// | BTCLR  |  BT1    |  BT2    |   BT3   |   BT4   |   BT5   |                  | CAPS | NUMS | SCLK  |      |       |       |
// | EXTPWR | RGB_HUD | RGB_HUI | RGB_SAD | RGB_SAI | RGB_EFF |                  |      |      |       |      |       |       |
// |        | RGB_BRD | RGB_BRI |         |         |         |                  |      |      |       |      |       |       |
// |        |         |         |         |         |         | RGB_TOG | |      |      |      |       |      |       |       |
//                    |         |         |         |         |         | |      |      |      |       |      |
            label = "sys";
            bindings = <
&bt BT_CLR        &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &bt BT_SEL 4                            &kp CLCK  &kp KP_NLCK  &kp SLCK &none &none &out OUT_TOG
&ext_power EP_TOG &rgb_ug RGB_HUD &rgb_ug RGB_HUI &rgb_ug RGB_SAD &rgb_ug RGB_SAI &rgb_ug RGB_EFF                         &none &none &none &none &none &none
&none             &rgb_ug RGB_BRD &rgb_ug RGB_BRI &none           &none           &none                                   &none &none &none &none &none &none
&none             &none           &none           &none           &none           &none            &rgb_ug RGB_TOG &none  &none &none &none &none &none &none
                                  &none           &none           &none           &trans           &trans          &none  &none &none &none &none
            >;
        };

    };
};
